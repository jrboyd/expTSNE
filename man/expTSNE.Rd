% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expTSNE.R
\docType{class}
\name{expTSNE.input-class}
\alias{expTSNE.input-class}
\alias{expTSNE.input}
\alias{expTSNE-class}
\alias{expTSNE.runTSNE}
\alias{expTSNE.save}
\alias{expTSNE.load}
\title{expTSNE.input}
\usage{
expTSNE.input(
  raw_counts,
  norm_counts = raw_counts,
  norm_description = "normalized counts",
  meta_data = data.frame(column_id = colnames(raw_counts), row.names =
    colnames(raw_counts)),
  column_id_var = "column_id",
  perplexity = 30,
  seed = 0,
  selected_rows = rownames(raw_counts),
  selected_columns = colnames(raw_counts)
)

expTSNE.runTSNE(et)

expTSNE.save(et, save_dir, overwrite = FALSE)

expTSNE.load(save_dir)
}
\arguments{
\item{et}{}

\item{save_dir}{}

\item{overwrite}{if TRUE, overwrite contents of save_dir.}
}
\description{
expTSNE.input

expTSNE.input

expTSNE

expTSNE.runTSNE

expTSNE.save

expTSNE.load
}
\section{Slots}{

\describe{
\item{\code{raw_counts}}{matrix.}

\item{\code{norm_counts}}{matrix.}

\item{\code{meta_data}}{data.frame.}

\item{\code{perplexity}}{numeric.}

\item{\code{seed}}{numeric.}

\item{\code{selected_rows}}{character.}

\item{\code{selected_columns}}{character.}

\item{\code{tsne_result}}{data.frame.}
}}

\examples{
test_counts = matrix(runif(10000), nrow = 10, ncol = 1000)
rownames(test_counts) = paste("row", seq_len(nrow(test_counts)))
colnames(test_counts) = paste("col", seq_len(ncol(test_counts)))

et = expTSNE.input(test_counts)
et = expTSNE.runTSNE(et)
expTSNE.runApp(et)
ex_data = system.file("extdata/test_expTSNE.input", package = "expTSNE", mustWork = TRUE)
et = expTSNE.load(ex_data)
et.ran = expTSNE.runTSNE(et)
test_counts = matrix(runif(10000), nrow = 10, ncol = 1000)
rownames(test_counts) = paste("row", seq_len(nrow(test_counts)))
colnames(test_counts) = paste("col", seq_len(ncol(test_counts)))

et = expTSNE.input(test_counts)
et.run = expTSNE.runTSNE(et)

expTSNE.save(et, "test_output")
expTSNE.save(et.run, "test_output.tsne")
et = expTSNE.load("test_output")
et.tsne = expTSNE.load("test_output.tsne")
}
